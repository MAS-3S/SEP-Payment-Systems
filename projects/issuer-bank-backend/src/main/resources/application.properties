
#Spring DataSource drajver koji se se koristiti za komunikaciju aplikacije sa bazom
spring.datasource.driverClassName=org.postgresql.Driver

#Navodi se baza koja se koristi
spring.datasource.platform=postgres

#Navodi se URL do baze koja je pokrenuta u lokalu na podrazumevanom portu 5432 i na serveru je kreirana sema baze pod nazivom "jpa"
#https://www.pgadmin.org/docs/pgadmin4/4.14/schema_dialog.html (ako koristimo Hibernate za kreiranje tabela, SQL deo sa linka nije potreban)
spring.datasource.url=jdbc:postgresql://localhost:5432/issuer?&sslmode=require&sslrootcert=classpath:postgresql.crt

#Navode se kredencijali za konekciju na server baze
spring.datasource.username=ENC(hUQUp2524x3IdXFukDv5TtCSS7ejPxJK)
spring.datasource.password=ENC(BEL5/KAMmGcd8vojoqrynA==)

#Umesto da sami pisemo SQL skriptu za kreiranje tabela u bazi, Hibernate kreira tabele na osnovu anotacija @Entity i kada aplikacija zavrsi sa radom dropuje ih (create-drop)
#https://www.baeldung.com/spring-boot-data-sql-and-schema-sql
#Ako zelimo sami da kreiramo skriptu za kreiranje tabela potrebno je u src/main/resources folderu kreirati i popuniti fajl pod nazivom schema.sql koji ?e Spring Boot automatski pokrenuti pri pokretanju aplikacije
spring.jpa.hibernate.ddl-auto = create-drop

#Hibernate SQL upiti se ispisuju na IDE konzoli
spring.jpa.show-sql = true
#formatira ispis SQL upita koje Hibernate pravi ka bazi na IDE konzoli
spring.jpa.properties.hibernate.format_sql=true

#https://docs.spring.io/spring-boot/docs/2.1.0.M1/reference/html/howto-database-initialization.html#howto-initialize-a-database-using-spring-jdbc
spring.datasource.initialization-mode=always

#https://stackoverflow.com/questions/43905119/postgres-error-method-org-postgresql-jdbc-pgconnection-createclob-is-not-imple
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

#Hibernate optimizacija SQL upita za Postgres bazu
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQL95Dialect

#Podesavanje porta za server
server.port = 8084
server.ipaddress=172.20.10.3

spring.jpa.defer-datasource-initialization=true

#log file
logging.file.name=src/main/resources/log/issuer.log

issuer.bank.pan=ENC(LnhL6GED7Iwr/6F9SZXfTQ==)

#ssl configuration
server.ssl.enabled=true
server.ssl.key-alias=bank
server.ssl.key-store=classpath:bank.p12
server.ssl.key-store-password=ENC(1xMVQWan4YVItiXFkk9EKvmJpP/hyfAB)
server.ssl.key-store-type=PKCS12
server.ssl.trust-store=classpath:bank.p12
server.ssl.trust-store-password=ENC(FOBDwMCRouQRY6xPplKmbO+L8siSG2as)
server.ssl.trust-store-type=PKCS12
server.ssl.client-auth=want

jasypt.encryptor.algorithm=PBEWithMD5AndTripleDES
jasypt.encryptor.password=${JASYPT_ENCRYPTOR_PASSWORD}
jasypt.encryptor.iv-generator-classname=org.jasypt.iv.NoIvGenerator

#enc-dec-key-vec
encryption.key=ENC(A9KstWCp5iwkXfwZNzI5uXlyVxtzo5YxZsoZp0wiRgA=)
encryption.vector=ENC(vvVv76MJPmrN97P05UrLzeja11qtLeoICGy16wBHKUU=)

server.address=172.20.10.3